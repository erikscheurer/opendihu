# This script declares to SCons how to compile the example.
# It has to be called from a SConstruct file.
# The 'env' object is passed from there and contains further specification like directory and debug/release flags.
#
# Note: If you're creating a new example and copied this file, adjust the desired name of the executable in the 'target' parameter of env.Program.


Import('env')     # import Environment object from calling SConstruct

testcases = [
  "diffusion_1d_structured_regular_fixed_linear",
  "diffusion_1d_structured_regular_fixed_quadratic",
  "diffusion_1d_structured_regular_fixed_hermite",
  "diffusion_1d_structured_deformable_linear",
  "diffusion_1d_structured_deformable_quadratic",
  "diffusion_1d_structured_deformable_hermite",
  "diffusion_1d_unstructured_deformable_linear",
  "diffusion_1d_unstructured_deformable_quadratic",
  "diffusion_1d_unstructured_deformable_hermite",
  
  "diffusion_2d_structured_regular_fixed_linear",
  "diffusion_2d_structured_regular_fixed_quadratic",
  "diffusion_2d_structured_regular_fixed_hermite",
  "diffusion_2d_structured_deformable_linear",
  "diffusion_2d_structured_deformable_quadratic",
  "diffusion_2d_structured_deformable_hermite",
  "diffusion_2d_unstructured_deformable_linear",
  "diffusion_2d_unstructured_deformable_quadratic",
  "diffusion_2d_unstructured_deformable_hermite",
  
  "diffusion_3d_structured_regular_fixed_linear",
  "diffusion_3d_structured_regular_fixed_quadratic",
  "diffusion_3d_structured_regular_fixed_hermite",
  "diffusion_3d_structured_deformable_linear",
  "diffusion_3d_structured_deformable_quadratic",
  "diffusion_3d_structured_deformable_hermite",
  "diffusion_3d_unstructured_deformable_linear",
  "diffusion_3d_unstructured_deformable_quadratic",
  "diffusion_3d_unstructured_deformable_hermite",
]
#testcases = ["diffusion_2d_structured_regular_fixed_linear",]

for testcase in testcases:
  env.Program(target = testcase, source = "src/{}.cpp".format(testcase))
